ifndef EXCELLENT
# Copyright (C) 2012 -> 2017, Andy Bennett, Knodium Ltd.
# Copyright (C) 2018,         Regsiter Dynamics Ltd.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# Redistributions of source code must retain the above copyright notice, this
# list of conditions and the following disclaimer.
# Redistributions in binary form must reproduce the above copyright notice,
# this list of conditions and the following disclaimer in the documentation
# and/or other materials provided with the distribution.
# Neither the name of the author nor the names of its contributors may be
# used to endorse or promote products derived from this software without
# specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.

# excellent.mk â€“ an excellent way of recursing makefiles non-recursively
# See the help at https://github.com/register-dynamics/excellent.mk.

%/include.mk: %/Makefile ./.include.lock
	@echo '# Generated by excellent.mk. DO NOT EDIT.' > $@
	@echo 'ifndef ${subst /,_,${@D}}_dir' >> $@
	@echo '${subst /,_,${@D}}_dir := ${@D}/' >> $@
	@sed -E -e 's/[^[:space:]"]+(\.|\/)/$${${subst /,_,${@D}}_dir}&/g' \
				 -e 's/patsubst \$$\{${subst /,_,${@D}}_dir\}/patsubst /g' \
				 -e '/excellent.mk$$/ d' \
				 $^ >> $@
	@echo '' >> $@
# Replace variables with namespaced versions.
# We detect something which looks like a variable definition,
# replace that definition with a namespaced version,
# and then replace all references to that definition (e.g. something like ${VAR})
	@for VAR in `grep -E "^[A-Z_]+\s*:?=" $< | cut -d= -f1 | tr -d "[^:alnum:]"`; do \
				sed -E -i '' "s/^$$VAR/${subst /,_,${@D}}_&/" $@; \
				sed -E -i '' "s/\\\$$(\(|\{)($$VAR)(\)|\})/\$$\1${subst /,_,${@D}}_\2\3/" $@; \
				done
	@for PHONY in `grep .PHONY: $< | cut -f2 -d:`; do \
				sed -E -i '' "s/^$${PHONY}:/$${PHONY}: $${PHONY}_${subst /,_,${@D}}\n$${PHONY}_${subst /,_,${@D}}:/" $@; \
				echo ".PHONY: $${PHONY}_${subst /,_,${@D}}" >> $@; \
				done
	@(grep --quiet ^all_ $@ && echo '${@D}: all_${subst /,_,${@D}}' >> $@) || true
	@echo 'delete_${subst /,_,${@D}}:' >> $@
	@echo '	rm $@' >> $@
	@echo 'clean_include: delete_${subst /,_,${@D}}' >> $@
	@echo 'endif' >> $@

# Ensure that all the include.mks have been generated by this Makefile
# If not, this .include.lock will be out of date
# (either it won't exist as it has been deleted by a parent .include.lock being made
# or the child .include.lock will be newer)
./.include.lock: $(shell find */ -name ".include.lock")
	@find . -name "include.mk" | xargs -r rm
	@find . -name ".include.lock" | xargs -r rm
	@touch $@

EXCELLENT := true
endif
